{"version":3,"sources":["Components/AddCategory.js","helpers/getGifts.js","Components/GriftGridItem.js","Components/GiftGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","busquedaValue","setbusquedaValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","g","id","title","images","downsized_medium","GriftGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifts","img","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAcK,OAAOC,OAAS,GAC9BR,GAAc,SAACS,GAAD,MAAO,CAACP,OAK1B,SACI,uBACIQ,KAAO,OACPC,MAAUT,EACVU,SAjBc,SAACP,GACvBF,EAAiBE,EAAEQ,OAAOF,a,8BCPjBG,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEdC,EAFc,kGAEoFC,UAAUH,IAF9F,SAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAQD,EAAKE,KAAI,SAACC,GAAO,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MACTV,IAAG,UAAEQ,EAAEG,cAAJ,aAAE,EAAUC,iBAAiBZ,QAVpB,kBAcbM,GAda,4CAAH,sDCCZO,EAAgB,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAOf,EAAMgB,IAAON,IACzB,4BAAKA,QCHJO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEvB,ECHyB,SAAEA,GAE3B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAW,WAEPxB,EAAUC,GACLwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAOtB,CAAEpB,IAGEqB,EDrB0BK,CAAe1B,GAAxCoB,EAAR,EAAQA,QAAcP,EAAtB,EAAiBN,KAEjB,OACI,qCACI,oBAAIS,UAAU,qCAAd,SAAqDhB,IACnDoB,GAAW,mBAAGJ,UAAU,oCAAb,qBAEb,qBAAKA,UAAU,YAAf,SACMH,EAAOJ,KAAK,SAAEkB,GAAF,OACV,cAAC,EAAD,eAESA,GADEA,EAAIhB,aEZtBiB,EAAgB,WAEzB,MAAoC1C,mBAAS,CAAC,WAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEQ4C,EAAWpB,KAAK,SAAET,GAAF,OACZ,cAAC,EAAD,CAEIA,SAAaA,GADNA,YCTnC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1fc0fad7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [busquedaValue, setbusquedaValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setbusquedaValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (busquedaValue.trim().length > 2){\r\n            setCategories((cat)=>[busquedaValue]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input \r\n                type = \"text\"\r\n                value = { busquedaValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n    export const getGifts = async ( category ) => {\r\n\r\n        const url = `http://api.giphy.com/v1/gifs/search?api_key=mlJtfHur7k5GbwmRpENRpNjexTyi3FJ3&limit=10&q=${ encodeURI(category) }`;\r\n        const resp = await fetch( url );\r\n        const { data } = await resp.json();\r\n\r\n        const gifts = data.map((g) => {\r\n            return {\r\n                id: g.id,\r\n                title: g.title,\r\n                url: g.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifts;\r\n        \r\n    }","import React from 'react'\r\n\r\nexport const GriftGridItem = ( { title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src= { url } alt= { title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts'\r\n import { GriftGridItem } from './GriftGridItem';\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n    const { loading, data:images } = useFetchGifts( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\" animate__animated animate__fadeIn\">{ category }</h3>\r\n            { loading && <p className=\" animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                { images.map( ( img ) => (\r\n                    <GriftGridItem \r\n                        key= { img.id } \r\n                        { ...img}\r\n                    />\r\n                ) ) }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifts( category )\r\n            .then(imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                \r\n            }\r\n        );\r\n\r\n\r\n    }, [ category ]);\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GiftGrid } from './Components/GiftGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Marvel']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr />            \r\n            <ol>\r\n                { \r\n                    categories.map( ( category ) => (\r\n                        <GiftGrid \r\n                            key= { category } \r\n                            category = { category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'animate.css';\n\nimport {GiftExpertApp} from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}